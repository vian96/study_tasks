; program for solving quadratic equation

in 
pop ax 
in 
pop bx 
in 
pop cx

push ax
push 0
je :linear

; calculating discriminant
push bx
push bx
mul     ; b^2

push -4
push ax
push cx
mul
mul     ; -4ac

add
pop dx  ; discriminant

push dx
out

push dx
push 0
ja :two_roots

push dx
push 0
je :one_root

; no_roots
push 0
out 

jmp :exit

:one_root
push 1
out

push bx
push ax
push -2
mul
div     ; b/(-2a)

out

jmp :exit

:two_roots
push 2
out 

push dx
sqrt
pop dx

push ax
push 2
mul
pop ax

push bx
push -1
mul 
pop bx

push dx
push -1
mul

push bx
add     ; -sqrt(d) - b

push ax
div
out     ; smaller root (if a > 0)

push dx
push bx
add     ; sqrt(d) - b 

push ax
div
out     ; bigger root (if a > 0)

jmp :exit

:linear
push bx
push 0
je :constant

push 1
out

push cx
push -1
mul     ; -c 

push bx
div     ; -c/b 
out

jmp :exit

:constant
push cx
push 0
je :tautology

push 0
out

jmp :exit

:tautology
push -1
out

:exit

